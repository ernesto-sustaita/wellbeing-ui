{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/icon\";\nexport class MeditationComponent {\n  constructor() {}\n  ngOnInit() {}\n  playBell() {\n    const audio = new Audio('assets/sound/tibetan-bell-sound-8s.mp3');\n    audio.play();\n  }\n}\nMeditationComponent.ɵfac = function MeditationComponent_Factory(t) {\n  return new (t || MeditationComponent)();\n};\nMeditationComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: MeditationComponent,\n  selectors: [[\"app-meditation\"]],\n  decls: 31,\n  vars: 0,\n  consts: [[\"id\", \"stopwatch-container\"], [1, \"clock\"], [\"viewBox\", \"0 0 120 120\", \"version\", \"1.1\", \"xmlns\", \"http://www.w3.org/2000/svg\", 1, \"circle\"], [\"cx\", \"60\", \"cy\", \"60\", \"r\", \"60\", 1, \"outer-circle\"], [\"cx\", \"60\", \"cy\", \"60\", \"r\", \"57\"], [\"x1\", \"60\", \"y1\", \"0\", \"x2\", \"60\", \"y2\", \"60\", 1, \"seconds\"], [\"cx\", \"60\", \"cy\", \"60\", \"r\", \"3\", 1, \"center-circle\"], [\"x1\", \"60\", \"y1\", \"5\", \"x2\", \"60\", \"y2\", \"10\", 1, \"line\"], [\"id\", \"stopwatch\"], [\"id\", \"setTimePanel\"], [\"type\", \"number\", \"id\", \"setTime\"], [\"id\", \"notifications\"], [\"id\", \"summaryPanel\"], [\"id\", \"totalTime\"], [\"id\", \"totalDistractions\"], [\"mat-icon-button\", \"\", \"onclick\", \"start(true)\"], [\"onclick\", \"pause()\", \"id\", \"pauseButton\"], [\"onclick\", \"distracted()\", \"id\", \"distractedButton\"]],\n  template: function MeditationComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n      i0.ɵɵtext(2, \"Meditate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 1);\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(4, \"svg\", 2);\n      i0.ɵɵelement(5, \"circle\", 3)(6, \"circle\", 4)(7, \"line\", 5)(8, \"circle\", 6)(9, \"line\", 7);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵnamespaceHTML();\n      i0.ɵɵelementStart(10, \"div\", 8);\n      i0.ɵɵtext(11, \"00:00\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"div\", 9);\n      i0.ɵɵtext(13, \" Meditation time: \");\n      i0.ɵɵelement(14, \"input\", 10);\n      i0.ɵɵtext(15, \" minutes \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(16, \"div\", 11);\n      i0.ɵɵelementStart(17, \"div\", 12)(18, \"div\");\n      i0.ɵɵtext(19, \"Total time: \");\n      i0.ɵɵelement(20, \"span\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"div\");\n      i0.ɵɵtext(22, \"Distractions: \");\n      i0.ɵɵelement(23, \"span\", 14);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(24, \"button\", 15)(25, \"mat-icon\");\n      i0.ɵɵtext(26, \"play_circle\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(27, \"button\", 16);\n      i0.ɵɵtext(28, \"Pause\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(29, \"button\", 17);\n      i0.ɵɵtext(30, \"Distracted\");\n      i0.ɵɵelementEnd()();\n    }\n  },\n  dependencies: [i1.MatIcon],\n  styles: [\"#stopwatch[_ngcontent-%COMP%] {\\n    font-family: 'Orbitron', sans-serif;\\n    color: #66ff99;\\n    font-size: 56px;\\n    text-align: center;\\n    margin: 30px 0;\\n}\\n\\n#stopwatch-container[_ngcontent-%COMP%] {\\n    width: 600px;\\n    margin: 0 auto;\\n    padding: 10px 0;\\n    color: #e7eafb;\\n    text-align: center;\\n}\\n\\nbutton[_ngcontent-%COMP%] {\\n    width: 50px;\\n    height: 40px;\\n    background-color: #202020;\\n    color: white;\\n    border-radius: 6px;\\n    border: 2px solid #fff;\\n    margin-left: 5px;\\n    margin-right: 5px;\\n}\\n\\nbutton[_ngcontent-%COMP%]:hover {\\n    background-color: #fff;\\n    color: #202020;\\n    cursor: pointer;\\n}\\n\\n#setTimePanel[_ngcontent-%COMP%] {\\n    margin: 10px;\\n    font-size: 23px;\\n}\\n\\n#setTimePanel[_ngcontent-%COMP%]    > input[_ngcontent-%COMP%] {\\n    width: 100px;\\n    text-align: center;\\n    font-size: 23px;\\n}\\n\\n#pauseButton[_ngcontent-%COMP%], #distractedButton[_ngcontent-%COMP%], #summaryPanel[_ngcontent-%COMP%], #notifications[_ngcontent-%COMP%] {\\n    display: none;\\n}\\n\\n#totalTime[_ngcontent-%COMP%], #totalDistractions[_ngcontent-%COMP%]{\\n    font-weight: bold;\\n}\\n\\n.clock[_ngcontent-%COMP%] {\\n    margin: 0px auto;\\n    width: 250px;\\n    height: 250px;\\n    fill: black\\n}\\n.outer-circle[_ngcontent-%COMP%], .center-circle[_ngcontent-%COMP%] {\\n    fill: DarkSlateGray;\\n}\\n\\n.seconds[_ngcontent-%COMP%] {\\n    transform-origin: center;\\n    stroke-linecap: round;\\n}\\n\\n.seconds[_ngcontent-%COMP%] {\\n    stroke: white;\\n}\\n\\n.line[_ngcontent-%COMP%] {\\n    stroke-width: 1px;\\n    stroke: white;\\n    stroke-linecap: round;\\n    transform-origin: center;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbWVkaXRhdGlvbi9tZWRpdGF0aW9uLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0lBQ0ksbUNBQW1DO0lBQ25DLGNBQWM7SUFDZCxlQUFlO0lBQ2Ysa0JBQWtCO0lBQ2xCLGNBQWM7QUFDbEI7O0FBRUE7SUFDSSxZQUFZO0lBQ1osY0FBYztJQUNkLGVBQWU7SUFDZixjQUFjO0lBQ2Qsa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0ksV0FBVztJQUNYLFlBQVk7SUFDWix5QkFBeUI7SUFDekIsWUFBWTtJQUNaLGtCQUFrQjtJQUNsQixzQkFBc0I7SUFDdEIsZ0JBQWdCO0lBQ2hCLGlCQUFpQjtBQUNyQjs7QUFFQTtJQUNJLHNCQUFzQjtJQUN0QixjQUFjO0lBQ2QsZUFBZTtBQUNuQjs7QUFFQTtJQUNJLFlBQVk7SUFDWixlQUFlO0FBQ25COztBQUVBO0lBQ0ksWUFBWTtJQUNaLGtCQUFrQjtJQUNsQixlQUFlO0FBQ25COztBQUVBO0lBQ0ksYUFBYTtBQUNqQjs7QUFFQTtJQUNJLGlCQUFpQjtBQUNyQjs7QUFFQTtJQUNJLGdCQUFnQjtJQUNoQixZQUFZO0lBQ1osYUFBYTtJQUNiO0FBQ0o7QUFDQTs7SUFFSSxtQkFBbUI7QUFDdkI7O0FBRUE7SUFDSSx3QkFBd0I7SUFDeEIscUJBQXFCO0FBQ3pCOztBQUVBO0lBQ0ksYUFBYTtBQUNqQjs7QUFFQTtJQUNJLGlCQUFpQjtJQUNqQixhQUFhO0lBQ2IscUJBQXFCO0lBQ3JCLHdCQUF3QjtBQUM1QiIsInNvdXJjZXNDb250ZW50IjpbIlxuI3N0b3B3YXRjaCB7XG4gICAgZm9udC1mYW1pbHk6ICdPcmJpdHJvbicsIHNhbnMtc2VyaWY7XG4gICAgY29sb3I6ICM2NmZmOTk7XG4gICAgZm9udC1zaXplOiA1NnB4O1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBtYXJnaW46IDMwcHggMDtcbn1cblxuI3N0b3B3YXRjaC1jb250YWluZXIge1xuICAgIHdpZHRoOiA2MDBweDtcbiAgICBtYXJnaW46IDAgYXV0bztcbiAgICBwYWRkaW5nOiAxMHB4IDA7XG4gICAgY29sb3I6ICNlN2VhZmI7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG5idXR0b24ge1xuICAgIHdpZHRoOiA1MHB4O1xuICAgIGhlaWdodDogNDBweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjAyMDIwO1xuICAgIGNvbG9yOiB3aGl0ZTtcbiAgICBib3JkZXItcmFkaXVzOiA2cHg7XG4gICAgYm9yZGVyOiAycHggc29saWQgI2ZmZjtcbiAgICBtYXJnaW4tbGVmdDogNXB4O1xuICAgIG1hcmdpbi1yaWdodDogNXB4O1xufVxuXG5idXR0b246aG92ZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gICAgY29sb3I6ICMyMDIwMjA7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG4jc2V0VGltZVBhbmVsIHtcbiAgICBtYXJnaW46IDEwcHg7XG4gICAgZm9udC1zaXplOiAyM3B4O1xufVxuXG4jc2V0VGltZVBhbmVsID4gaW5wdXQge1xuICAgIHdpZHRoOiAxMDBweDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgZm9udC1zaXplOiAyM3B4O1xufVxuXG4jcGF1c2VCdXR0b24sICNkaXN0cmFjdGVkQnV0dG9uLCAjc3VtbWFyeVBhbmVsLCAjbm90aWZpY2F0aW9ucyB7XG4gICAgZGlzcGxheTogbm9uZTtcbn1cblxuI3RvdGFsVGltZSwgI3RvdGFsRGlzdHJhY3Rpb25ze1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG4uY2xvY2sge1xuICAgIG1hcmdpbjogMHB4IGF1dG87XG4gICAgd2lkdGg6IDI1MHB4O1xuICAgIGhlaWdodDogMjUwcHg7XG4gICAgZmlsbDogYmxhY2tcbn1cbi5vdXRlci1jaXJjbGUsXG4uY2VudGVyLWNpcmNsZSB7XG4gICAgZmlsbDogRGFya1NsYXRlR3JheTtcbn1cblxuLnNlY29uZHMge1xuICAgIHRyYW5zZm9ybS1vcmlnaW46IGNlbnRlcjtcbiAgICBzdHJva2UtbGluZWNhcDogcm91bmQ7XG59XG5cbi5zZWNvbmRzIHtcbiAgICBzdHJva2U6IHdoaXRlO1xufVxuXG4ubGluZSB7XG4gICAgc3Ryb2tlLXdpZHRoOiAxcHg7XG4gICAgc3Ryb2tlOiB3aGl0ZTtcbiAgICBzdHJva2UtbGluZWNhcDogcm91bmQ7XG4gICAgdHJhbnNmb3JtLW9yaWdpbjogY2VudGVyO1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":";;AAOA,OAAM,MAAOA,mBAAmB;EAE9BC,eAAgB;EAEhBC,QAAQ,IACR;EAEAC,QAAQ;IACN,MAAMC,KAAK,GAAG,IAAIC,KAAK,CAAC,wCAAwC,CAAC;IACjED,KAAK,CAACE,IAAI,EAAE;EACd;;AAVWN,mBAAmB;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB;QAAnBA,mBAAmB;EAAAO;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCPhCC,8BAA8B;MACtBA,wBAAQ;MAAAA,iBAAK;MACjBA,8BAAmB;MACfA,mBAA2F;MAA3FA,8BAA2F;MACzFA,4BAAqD;MAKvDA,iBAAM;MAEVA,oBAAoB;MAApBA,+BAAoB;MAAAA,sBAAK;MAAAA,iBAAM;MAC/BA,+BAAuB;MACnBA,mCAAiB;MAAAA,6BAAmC;MAACA,0BACzD;MAAAA,iBAAM;MACNA,2BAA8B;MAC9BA,gCAAuB;MACdA,6BAAY;MAAAA,4BAA4B;MAAAA,iBAAM;MACnDA,4BAAK;MAAAA,+BAAc;MAAAA,4BAAoC;MAAAA,iBAAM;MAEjEA,mCAA8C;MAChCA,4BAAW;MAAAA,iBAAW;MAGpCA,mCAA2C;MAAAA,sBAAK;MAAAA,iBAAS;MACzDA,mCAAqD;MAAAA,2BAAU;MAAAA,iBAAS","names":["MeditationComponent","constructor","ngOnInit","playBell","audio","Audio","play","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["/home/ernesto/Proyectos/wellbeing-ui/wellbeing-ui/src/app/meditation/meditation.component.ts","/home/ernesto/Proyectos/wellbeing-ui/wellbeing-ui/src/app/meditation/meditation.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-meditation',\n  templateUrl: './meditation.component.html',\n  styleUrls: ['./meditation.component.css']\n})\nexport class MeditationComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  playBell() {\n    const audio = new Audio('assets/sound/tibetan-bell-sound-8s.mp3');\n    audio.play();\n  }\n\n}\n","<div id=\"stopwatch-container\">\n    <h1>Meditate</h1>\n    <div class=\"clock\">\n        <svg class=\"circle\" viewBox=\"0 0 120 120\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n          <circle cx=\"60\" cy=\"60\" r=\"60\" class=\"outer-circle\"/>\n          <circle cx=\"60\" cy=\"60\" r=\"57\" />\n          <line x1=\"60\" y1=\"0\" x2=\"60\" y2=\"60\" class=\"seconds\" />\n          <circle cx=\"60\" cy=\"60\" r=\"3\" class=\"center-circle\" />\n          <line x1=\"60\" y1=\"5\" x2=\"60\" y2=\"10\" class=\"line\" />\n        </svg>\n      </div>            \n    <div id=\"stopwatch\">00:00</div>\n    <div id=\"setTimePanel\">\n        Meditation time: <input type=\"number\" id=\"setTime\"/> minutes\n    </div>\n    <div id=\"notifications\"></div>\n    <div id=\"summaryPanel\">\n        <div>Total time: <span id=\"totalTime\"></span></div>\n        <div>Distractions: <span id=\"totalDistractions\"></span></div>\n    </div>\n    <button mat-icon-button onclick=\"start(true)\">\n        <mat-icon>play_circle</mat-icon>\n    </button>\n    \n    <button onclick=\"pause()\" id=\"pauseButton\">Pause</button>\n    <button onclick=\"distracted()\" id=\"distractedButton\">Distracted</button>\n\n    <script>\n        var stopwatch = document.getElementById(\"stopwatch\");\n        var startBtn = document.getElementById(\"startButton\");\n        var timeoutId = null;\n        var sec = 60;\n        var min = parseInt(document.getElementById('setTime').value) - 1 ?? 0;\n        var distractions = 0;\n        var minutesToSeconds = parseInt(document.getElementById('setTime').value) * 60;\n        var degreesForSecond = 360 / minutesToSeconds;\n        var degreesAccumulator = degreesForSecond;\n\n        calculateLines();\n\n        function calculateLines() {\n            const lines = document.querySelectorAll(\".line\");\n            const numberLines = lines.length;\n            for (let i = 0; i < numberLines; i++) {\n                const line = lines[i];\n                const angle = linearMap(i, 0, numberLines, 0, 360);\n                line.style.transform = `rotate(${angle}deg)`;\n            }\n        }\n\n        /* function to start stopwatch */\n        function start(flag) {\n            if (flag) {\n                startBtn.disabled = true;\n                document.getElementById('startButton').style.display = 'none';\n                document.getElementById('setTimePanel').style.display = 'none';\n\n                document.getElementById('pauseButton').style.display = 'inline';\n                document.getElementById('distractedButton').style.display = 'inline';\n\n                document.getElementById('bell').play();\n            }\n        \n            timeoutId = setTimeout(function() {\n                sec = parseInt(sec);\n                min = parseInt(min);\n        \n                sec--;\n        \n                if (sec == -1) {\n                    min -= 1;\n                    sec = 59;\n                }\n                if (sec < 10) {\n                    sec = '0' + sec;\n                }\n                if (min < 10) {\n                    min = '0' + min;\n                }\n\n                stopwatch.innerHTML = min + ':' + sec;\n                document.querySelector(\".seconds\").style.transform = `rotate(${degreesAccumulator}deg)`;\n                degreesAccumulator+=degreesForSecond;\n\n                bellPlay = 0;\n\n                if(min == '00' && sec == '00')\n                {\n                    pause();\n                    document.getElementById('bell').play();\n                    document.getElementById(\"totalTime\").innerHTML = document.getElementById('setTime').value;\n                    document.getElementById(\"totalDistractions\").innerHTML = distractions;\n                    document.getElementById(\"summaryPanel\").style.display = 'block';\n                    \n                    let intervalId = setInterval(playBell, 8000);\n\n                    function playBell(){\n                        document.getElementById('bell').play();\n                        bellPlay++;\n                        if(bellPlay==2)\n                            clearInterval(intervalId);\n                    }\n\n                    const date = new Date();\n\n                    $.ajax({\n                        type: 'POST',\n                        url: 'https://localhost:7232/api/Activity',\n                        data: '{\"id\":0,\"userId\":1,\"type\":2,\"createdDate\":\"' + date.toJSON() +'\",\"duration\":' + document.getElementById('setTime').value +',\"distractions\":' + distractions + '}', // or JSON.stringify ({name: 'jonas'}),\n                        success: function(data) { $(\"#notifications\").html(\"Session summary saved!\").css('display','block'); },\n                        contentType: \"application/json\",\n                        dataType: 'json'\n                    });\n\n                    return;\n                }\n        \n                // calling start() function recursivly to continue stopwatch\n                start();\n        \n            }, 1000); // setTimeout delay time 10 milliseconds\n        }\n        \n        /* function to pause stopwatch */\n        function pause() {\n            clearTimeout(timeoutId);\n            startBtn.disabled = false;\n        }\n        \n        /* function to reset stopwatch */\n        function reset() {\n            ms = 0;\n            sec = 0;\n            min = 0;\n            clearTimeout(timeoutId);\n            stopwatch.innerHTML = '00:00';\n            startBtn.disabled = false;\n        }\n\n        function distracted() {\n            distractions++;\n        }\n    </script>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}