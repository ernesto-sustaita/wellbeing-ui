{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/material/icon\";\nfunction MeditationComponent_button_29_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 18);\n    i0.ɵɵlistener(\"click\", function MeditationComponent_button_29_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.distractions = ctx_r2.distractions + 1);\n    });\n    i0.ɵɵelementStart(1, \"mat-icon\");\n    i0.ɵɵtext(2, \"add_circle\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport class MeditationComponent {\n  constructor() {\n    this.distractions = 0;\n    this.isDistractedButtonVisible = false;\n    this.seconds = 60;\n    this.minutes = 0;\n  }\n  ngOnInit() {}\n  playBell() {\n    const audio = new Audio('assets/sound/tibetan-bell-sound-8s.mp3');\n    audio.play();\n    this.isDistractedButtonVisible = true;\n  }\n  updateTime(value) {\n    this.minutes = parseInt(value);\n  }\n}\nMeditationComponent.ɵfac = function MeditationComponent_Factory(t) {\n  return new (t || MeditationComponent)();\n};\nMeditationComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: MeditationComponent,\n  selectors: [[\"app-meditation\"]],\n  decls: 30,\n  vars: 3,\n  consts: [[\"id\", \"stopwatch-container\"], [1, \"clock\"], [\"viewBox\", \"0 0 120 120\", \"version\", \"1.1\", \"xmlns\", \"http://www.w3.org/2000/svg\", 1, \"circle\"], [\"cx\", \"60\", \"cy\", \"60\", \"r\", \"60\", 1, \"outer-circle\"], [\"cx\", \"60\", \"cy\", \"60\", \"r\", \"57\"], [\"x1\", \"60\", \"y1\", \"0\", \"x2\", \"60\", \"y2\", \"60\", 1, \"seconds\"], [\"cx\", \"60\", \"cy\", \"60\", \"r\", \"3\", 1, \"center-circle\"], [\"x1\", \"60\", \"y1\", \"5\", \"x2\", \"60\", \"y2\", \"10\", 1, \"line\"], [\"id\", \"stopwatch\"], [\"id\", \"setTimePanel\"], [\"type\", \"number\", \"min\", \"0\", 3, \"change\"], [\"setTime\", \"\"], [\"id\", \"notifications\"], [\"id\", \"summaryPanel\"], [\"id\", \"totalTime\"], [\"mat-icon-button\", \"\", 3, \"click\"], [\"onclick\", \"pause()\", \"id\", \"pauseButton\"], [3, \"click\", 4, \"ngIf\"], [3, \"click\"]],\n  template: function MeditationComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r4 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n      i0.ɵɵtext(2, \"Meditate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 1);\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(4, \"svg\", 2);\n      i0.ɵɵelement(5, \"circle\", 3)(6, \"circle\", 4)(7, \"line\", 5)(8, \"circle\", 6)(9, \"line\", 7);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵnamespaceHTML();\n      i0.ɵɵelementStart(10, \"div\", 8);\n      i0.ɵɵtext(11, \"00:00\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"div\", 9);\n      i0.ɵɵtext(13, \" Meditation time: \");\n      i0.ɵɵelementStart(14, \"input\", 10, 11);\n      i0.ɵɵlistener(\"change\", function MeditationComponent_Template_input_change_14_listener() {\n        i0.ɵɵrestoreView(_r4);\n        const _r0 = i0.ɵɵreference(15);\n        return i0.ɵɵresetView(ctx.updateTime(_r0.value));\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(16);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(17, \"div\", 12);\n      i0.ɵɵelementStart(18, \"div\", 13)(19, \"div\");\n      i0.ɵɵtext(20, \"Total time: \");\n      i0.ɵɵelement(21, \"span\", 14);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"div\");\n      i0.ɵɵtext(23);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(24, \"button\", 15);\n      i0.ɵɵlistener(\"click\", function MeditationComponent_Template_button_click_24_listener() {\n        return ctx.playBell();\n      });\n      i0.ɵɵelementStart(25, \"mat-icon\");\n      i0.ɵɵtext(26, \"play_circle\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(27, \"button\", 16);\n      i0.ɵɵtext(28, \"Pause\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(29, MeditationComponent_button_29_Template, 3, 0, \"button\", 17);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(16);\n      i0.ɵɵtextInterpolate1(\" minutes \", ctx.minutes, \" \");\n      i0.ɵɵadvance(7);\n      i0.ɵɵtextInterpolate1(\"Distractions: \", ctx.distractions, \"\");\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ctx.isDistractedButtonVisible);\n    }\n  },\n  dependencies: [i1.NgIf, i2.MatIcon],\n  styles: [\"#stopwatch[_ngcontent-%COMP%] {\\n    font-family: 'Orbitron', sans-serif;\\n    color: #66ff99;\\n    font-size: 56px;\\n    text-align: center;\\n    margin: 30px 0;\\n}\\n\\n#stopwatch-container[_ngcontent-%COMP%] {\\n    width: 600px;\\n    margin: 0 auto;\\n    padding: 10px 0;\\n    color: #e7eafb;\\n    text-align: center;\\n}\\n\\nbutton[_ngcontent-%COMP%] {\\n    width: 50px;\\n    height: 40px;\\n    background-color: #202020;\\n    color: white;\\n    border-radius: 6px;\\n    border: 2px solid #fff;\\n    margin-left: 5px;\\n    margin-right: 5px;\\n}\\n\\nbutton[_ngcontent-%COMP%]:hover {\\n    background-color: #fff;\\n    color: #202020;\\n    cursor: pointer;\\n}\\n\\n#setTimePanel[_ngcontent-%COMP%] {\\n    margin: 10px;\\n    font-size: 23px;\\n}\\n\\n#setTimePanel[_ngcontent-%COMP%]    > input[_ngcontent-%COMP%] {\\n    width: 100px;\\n    text-align: center;\\n    font-size: 23px;\\n}\\n\\n#pauseButton[_ngcontent-%COMP%], #distractedButton[_ngcontent-%COMP%], #summaryPanel[_ngcontent-%COMP%], #notifications[_ngcontent-%COMP%] {\\n    display: none;\\n}\\n\\n#totalTime[_ngcontent-%COMP%], #totalDistractions[_ngcontent-%COMP%]{\\n    font-weight: bold;\\n}\\n\\n.clock[_ngcontent-%COMP%] {\\n    margin: 0px auto;\\n    width: 250px;\\n    height: 250px;\\n    fill: black\\n}\\n.outer-circle[_ngcontent-%COMP%], .center-circle[_ngcontent-%COMP%] {\\n    fill: DarkSlateGray;\\n}\\n\\n.seconds[_ngcontent-%COMP%] {\\n    transform-origin: center;\\n    stroke-linecap: round;\\n}\\n\\n.seconds[_ngcontent-%COMP%] {\\n    stroke: white;\\n}\\n\\n.line[_ngcontent-%COMP%] {\\n    stroke-width: 1px;\\n    stroke: white;\\n    stroke-linecap: round;\\n    transform-origin: center;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbWVkaXRhdGlvbi9tZWRpdGF0aW9uLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0lBQ0ksbUNBQW1DO0lBQ25DLGNBQWM7SUFDZCxlQUFlO0lBQ2Ysa0JBQWtCO0lBQ2xCLGNBQWM7QUFDbEI7O0FBRUE7SUFDSSxZQUFZO0lBQ1osY0FBYztJQUNkLGVBQWU7SUFDZixjQUFjO0lBQ2Qsa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0ksV0FBVztJQUNYLFlBQVk7SUFDWix5QkFBeUI7SUFDekIsWUFBWTtJQUNaLGtCQUFrQjtJQUNsQixzQkFBc0I7SUFDdEIsZ0JBQWdCO0lBQ2hCLGlCQUFpQjtBQUNyQjs7QUFFQTtJQUNJLHNCQUFzQjtJQUN0QixjQUFjO0lBQ2QsZUFBZTtBQUNuQjs7QUFFQTtJQUNJLFlBQVk7SUFDWixlQUFlO0FBQ25COztBQUVBO0lBQ0ksWUFBWTtJQUNaLGtCQUFrQjtJQUNsQixlQUFlO0FBQ25COztBQUVBO0lBQ0ksYUFBYTtBQUNqQjs7QUFFQTtJQUNJLGlCQUFpQjtBQUNyQjs7QUFFQTtJQUNJLGdCQUFnQjtJQUNoQixZQUFZO0lBQ1osYUFBYTtJQUNiO0FBQ0o7QUFDQTs7SUFFSSxtQkFBbUI7QUFDdkI7O0FBRUE7SUFDSSx3QkFBd0I7SUFDeEIscUJBQXFCO0FBQ3pCOztBQUVBO0lBQ0ksYUFBYTtBQUNqQjs7QUFFQTtJQUNJLGlCQUFpQjtJQUNqQixhQUFhO0lBQ2IscUJBQXFCO0lBQ3JCLHdCQUF3QjtBQUM1QiIsInNvdXJjZXNDb250ZW50IjpbIlxuI3N0b3B3YXRjaCB7XG4gICAgZm9udC1mYW1pbHk6ICdPcmJpdHJvbicsIHNhbnMtc2VyaWY7XG4gICAgY29sb3I6ICM2NmZmOTk7XG4gICAgZm9udC1zaXplOiA1NnB4O1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBtYXJnaW46IDMwcHggMDtcbn1cblxuI3N0b3B3YXRjaC1jb250YWluZXIge1xuICAgIHdpZHRoOiA2MDBweDtcbiAgICBtYXJnaW46IDAgYXV0bztcbiAgICBwYWRkaW5nOiAxMHB4IDA7XG4gICAgY29sb3I6ICNlN2VhZmI7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG5idXR0b24ge1xuICAgIHdpZHRoOiA1MHB4O1xuICAgIGhlaWdodDogNDBweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjAyMDIwO1xuICAgIGNvbG9yOiB3aGl0ZTtcbiAgICBib3JkZXItcmFkaXVzOiA2cHg7XG4gICAgYm9yZGVyOiAycHggc29saWQgI2ZmZjtcbiAgICBtYXJnaW4tbGVmdDogNXB4O1xuICAgIG1hcmdpbi1yaWdodDogNXB4O1xufVxuXG5idXR0b246aG92ZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gICAgY29sb3I6ICMyMDIwMjA7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG4jc2V0VGltZVBhbmVsIHtcbiAgICBtYXJnaW46IDEwcHg7XG4gICAgZm9udC1zaXplOiAyM3B4O1xufVxuXG4jc2V0VGltZVBhbmVsID4gaW5wdXQge1xuICAgIHdpZHRoOiAxMDBweDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgZm9udC1zaXplOiAyM3B4O1xufVxuXG4jcGF1c2VCdXR0b24sICNkaXN0cmFjdGVkQnV0dG9uLCAjc3VtbWFyeVBhbmVsLCAjbm90aWZpY2F0aW9ucyB7XG4gICAgZGlzcGxheTogbm9uZTtcbn1cblxuI3RvdGFsVGltZSwgI3RvdGFsRGlzdHJhY3Rpb25ze1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG4uY2xvY2sge1xuICAgIG1hcmdpbjogMHB4IGF1dG87XG4gICAgd2lkdGg6IDI1MHB4O1xuICAgIGhlaWdodDogMjUwcHg7XG4gICAgZmlsbDogYmxhY2tcbn1cbi5vdXRlci1jaXJjbGUsXG4uY2VudGVyLWNpcmNsZSB7XG4gICAgZmlsbDogRGFya1NsYXRlR3JheTtcbn1cblxuLnNlY29uZHMge1xuICAgIHRyYW5zZm9ybS1vcmlnaW46IGNlbnRlcjtcbiAgICBzdHJva2UtbGluZWNhcDogcm91bmQ7XG59XG5cbi5zZWNvbmRzIHtcbiAgICBzdHJva2U6IHdoaXRlO1xufVxuXG4ubGluZSB7XG4gICAgc3Ryb2tlLXdpZHRoOiAxcHg7XG4gICAgc3Ryb2tlOiB3aGl0ZTtcbiAgICBzdHJva2UtbGluZWNhcDogcm91bmQ7XG4gICAgdHJhbnNmb3JtLW9yaWdpbjogY2VudGVyO1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":";;;;;;IAyBIA,kCAAyF;IAA1CA;MAAAA;MAAA;MAAA,kEAAuC,CAAC;IAAA,EAAC;IACpFA,gCAAU;IAAAA,0BAAU;IAAAA,iBAAW;;;ACnBvC,OAAM,MAAOC,mBAAmB;EAE9BC;IAEA,iBAAY,GAAG,CAAC;IAChB,8BAAyB,GAAG,KAAK;IACjC,YAAO,GAAG,EAAE;IACZ,YAAO,GAAG,CAAC;EALK;EAOhBC,QAAQ,IACR;EAEAC,QAAQ;IACN,MAAMC,KAAK,GAAG,IAAIC,KAAK,CAAC,wCAAwC,CAAC;IACjED,KAAK,CAACE,IAAI,EAAE;IACZ,IAAI,CAACC,yBAAyB,GAAG,IAAI;EACvC;EAEAC,UAAU,CAACC,KAAa;IACtB,IAAI,CAACC,OAAO,GAAGC,QAAQ,CAACF,KAAK,CAAC;EAChC;;AApBWT,mBAAmB;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB;QAAnBA,mBAAmB;EAAAY;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;;MDPhCjB,8BAA8B;MACtBA,wBAAQ;MAAAA,iBAAK;MACjBA,8BAAmB;MACfA,mBAA2F;MAA3FA,8BAA2F;MACzFA,4BAAqD;MAKvDA,iBAAM;MAEVA,oBAAoB;MAApBA,+BAAoB;MAAAA,sBAAK;MAAAA,iBAAM;MAC/BA,+BAAuB;MACnBA,mCAAiB;MAAAA,sCAA4E;MAAtCA;QAAAA;QAAA;QAAA,OAAUA,wCAAyB;MAAA,EAAC;MAA1EA,iBAA4E;MAACA,aAClG;MAAAA,iBAAM;MACNA,2BAA8B;MAC9BA,gCAAuB;MACdA,6BAAY;MAAAA,4BAA4B;MAAAA,iBAAM;MACnDA,4BAAK;MAAAA,aAA8B;MAAAA,iBAAM;MAE7CA,mCAA6C;MAArBA;QAAA,OAASkB,cAAU;MAAA,EAAC;MACxClB,iCAAU;MAAAA,4BAAW;MAAAA,iBAAW;MAGpCA,mCAA2C;MAAAA,sBAAK;MAAAA,iBAAS;MACzDA,6EAES;MACbA,iBAAM;;;MAfgGA,gBAClG;MADkGA,oDAClG;MAISA,eAA8B;MAA9BA,6DAA8B;MAO9BA,eAAoC;MAApCA,oDAAoC","names":["i0","MeditationComponent","constructor","ngOnInit","playBell","audio","Audio","play","isDistractedButtonVisible","updateTime","value","minutes","parseInt","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/home/ernesto/Proyectos/wellbeing-ui/wellbeing-ui/src/app/meditation/meditation.component.html","/home/ernesto/Proyectos/wellbeing-ui/wellbeing-ui/src/app/meditation/meditation.component.ts"],"sourcesContent":["<div id=\"stopwatch-container\">\n    <h1>Meditate</h1>\n    <div class=\"clock\">\n        <svg class=\"circle\" viewBox=\"0 0 120 120\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n          <circle cx=\"60\" cy=\"60\" r=\"60\" class=\"outer-circle\"/>\n          <circle cx=\"60\" cy=\"60\" r=\"57\" />\n          <line x1=\"60\" y1=\"0\" x2=\"60\" y2=\"60\" class=\"seconds\" />\n          <circle cx=\"60\" cy=\"60\" r=\"3\" class=\"center-circle\" />\n          <line x1=\"60\" y1=\"5\" x2=\"60\" y2=\"10\" class=\"line\" />\n        </svg>\n      </div>            \n    <div id=\"stopwatch\">00:00</div>\n    <div id=\"setTimePanel\">\n        Meditation time: <input type=\"number\" #setTime min=\"0\" (change)=\"updateTime(setTime.value)\"/> minutes {{minutes}}\n    </div>\n    <div id=\"notifications\"></div>\n    <div id=\"summaryPanel\">\n        <div>Total time: <span id=\"totalTime\"></span></div>\n        <div>Distractions: {{distractions}}</div>\n    </div>\n    <button mat-icon-button (click)=\"playBell()\">\n        <mat-icon>play_circle</mat-icon>\n    </button>\n    \n    <button onclick=\"pause()\" id=\"pauseButton\">Pause</button>\n    <button *ngIf=\"this.isDistractedButtonVisible\" (click)=\"distractions = distractions + 1\">\n        <mat-icon>add_circle</mat-icon>\n    </button>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-meditation',\n  templateUrl: './meditation.component.html',\n  styleUrls: ['./meditation.component.css']\n})\nexport class MeditationComponent implements OnInit {\n\n  constructor() { }\n\n  distractions = 0;\n  isDistractedButtonVisible = false;\n  seconds = 60;\n  minutes = 0;\n\n  ngOnInit(): void {\n  }\n\n  playBell() {\n    const audio = new Audio('assets/sound/tibetan-bell-sound-8s.mp3');\n    audio.play();\n    this.isDistractedButtonVisible = true;\n  }\n\n  updateTime(value: string){\n    this.minutes = parseInt(value);\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}